{"code":"import { isObject } from \"@vue/shared\";\r\nimport { track, trigger } from \"./effect\";\r\nexport function reactive(target) {\r\n    return createReactiveObject(target);\r\n}\r\n//用来搜集已经被代理过的对象\r\nconst reactiveMap = new WeakMap();\r\nfunction createReactiveObject(target) {\r\n    //若不是对象直接返回属性\r\n    if (!isObject(target)) {\r\n        return target;\r\n    }\r\n    /**\r\n     * 判断是否将生成的代理对象再代理，没被代理过的对象不会走get方法，被代理过的对象会获取属性进get方法，然后返回true\r\n     * 出现场景：\r\n     * const state = reactive({});\r\n     * const state1 = reactive(state);\r\n    */\r\n    if (target[\"__v_isReactive\" /* IS_REACTIVE */]) {\r\n        return target;\r\n    }\r\n    /**\r\n     * 判断是否将一个对象重复代理，如果被代理了直接返回被代理过的对象\r\n     * 出现场景:\r\n     * const state = { name: 'lsk' }\r\n     * const state1 = reactive(state)\r\n     * const state2 = reactive(state)\r\n    */\r\n    const exisitingProxy = reactiveMap.get(target);\r\n    if (exisitingProxy) {\r\n        return exisitingProxy;\r\n    }\r\n    //生成proxy实例\r\n    const proxy = new Proxy(target, mutableHandlers);\r\n    //将原对象和生成的代理对象生成映射表\r\n    reactiveMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nconst mutableHandlers = {\r\n    //获取proxy属性时进入get方法\r\n    get(target, key, recevier) {\r\n        //如果key值是__v_isReactive说明已经是个响应式数据\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return true;\r\n        }\r\n        //通过Reflect获取proxy实例上的属性\r\n        const result = Reflect.get(target, key, recevier);\r\n        /**\r\n         * 如果要获取的数据是个对象，那么就对它再次进行代理\r\n         * vue2中直接对data中的数据进行递归，而vue3中采用懒递归，获取属性是对象再做递归\r\n        */\r\n        if (isObject(result)) {\r\n            reactive(result);\r\n        }\r\n        //进行依赖收集\r\n        track(target, 'get', key);\r\n        //返回属性的值\r\n        return result;\r\n    },\r\n    //给proxy属性设置值时进入set方法\r\n    set(target, key, value, recevier) {\r\n        const oldValue = target[key];\r\n        //通过Reflect给proxy实例上的属性赋值\r\n        const result = Reflect.set(target, key, value, recevier);\r\n        if (oldValue !== result) {\r\n            //新值和旧值不一样，触发依赖\r\n            trigger(target, 'set', key);\r\n        }\r\n        //返回赋值的结果\r\n        return result;\r\n    }\r\n};\r\n//# sourceMappingURL=reactive.js.map","references":["D:/code/mini-vue3/packages/shared/src/index.ts","D:/code/mini-vue3/packages/reactivity/src/effect.ts"],"map":"{\"version\":3,\"file\":\"reactive.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../packages/reactivity/src/reactive.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAA;AACtC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,UAAU,CAAA;AACzC,MAAM,UAAU,QAAQ,CAAC,MAAM;IAC7B,OAAO,oBAAoB,CAAC,MAAM,CAAC,CAAA;AACrC,CAAC;AAKD,eAAe;AACf,MAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAA;AACjC,SAAS,oBAAoB,CAAC,MAAM;IAClC,aAAa;IACb,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;QACrB,OAAO,MAAM,CAAA;KACd;IACD;;;;;MAKE;IACF,IAAI,MAAM,oCAA2B,EAAE;QACrC,OAAO,MAAM,CAAA;KACd;IACD;;;;;;MAME;IACF,MAAM,cAAc,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;IAC9C,IAAI,cAAc,EAAE;QAClB,OAAO,cAAc,CAAA;KACtB;IACD,WAAW;IACX,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,EAAE,eAAe,CAAC,CAAA;IAChD,mBAAmB;IACnB,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC9B,OAAO,KAAK,CAAA;AACd,CAAC;AACD,MAAM,eAAe,GAAG;IACtB,mBAAmB;IACnB,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ;QACvB,kCAAkC;QAClC,IAAI,GAAG,uCAA8B,EAAE;YACrC,OAAO,IAAI,CAAA;SACZ;QACD,wBAAwB;QACxB,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAA;QACjD;;;UAGE;QACF,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;YACpB,QAAQ,CAAC,MAAM,CAAC,CAAA;SACjB;QACD,QAAQ;QACR,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;QACzB,QAAQ;QACR,OAAO,MAAM,CAAA;IACf,CAAC;IACD,qBAAqB;IACrB,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ;QAC9B,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;QAC5B,yBAAyB;QACzB,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAA;QACxD,IAAI,QAAQ,KAAK,MAAM,EAAE;YACvB,eAAe;YACf,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;SAC5B;QACD,SAAS;QACT,OAAO,MAAM,CAAA;IACf,CAAC;CACF,CAAA\"}"}
